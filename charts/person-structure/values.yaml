# Default values for person-structure.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/hrvestigo/person-structure-ms
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

securityContext: {}

service:
  type: ClusterIP
  port: 8443

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 50m
    memory: 256Mi

initContainers: []

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - person-structure
          topologyKey: kubernetes.io/hostname

timezone: ""

secret:
  decryptionKey: ""
  datasourcePassword: ""
  kafkaPassword: ""
  kafkaSchemaRegistryPassword: ""

logger:
  logToFile: false
  rollingFileAppender: false
  logDir: "/var/log/app"
  logDirMount:
    enabled: false
    # spec:
      # emptyDir: {}
      # flexVolume:
        # driver: ""
        # fsType: ""
        # options:
          # basepath: ""
          # basename: ""

deployment:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 60
  terminationGracePeriodSeconds: 60
  restartPolicy: Always  
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 60
    timeoutSeconds: 181
    successThreshold: 1
    failureThreshold: 2
    httpGet:
      path: /health/readiness?__cbhck=Health/k8s
      port: http
      scheme: HTTPS
      httpHeaders:
        - name: Content-Type
          value: application/json
        - name: User-Agent
          value: Health/k8s
        - name: Host
          value: localhost
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 60
    timeoutSeconds: 10
    failureThreshold: 3
    httpGet:
      path: /health/liveness?__cbhck=Health/k8s
      port: http
      scheme: HTTPS
      httpHeaders:
        - name: Content-Type
          value: application/json
        - name: User-Agent
          value: Health/k8s
        - name: Host
          value: localhost

healthStatusDownReturnCode: "418"

datasource:
  host: ""
  port: ""
  dbName: ""
  user: ""
  schema: ""
  connTimeout: 60000
  maxPoolSize: 2
  minIdle: 0

kafka:
  user: ""
  servers: ""
  saslMechanism: PLAIN
  securityProtocol: SASL_SSL
  schemaRegistry:
    credSource: USER_INFO
    user: ""
    url: ""
  topics:
    card:
      name: hr.vestigo.hp.card
      consumerGroup: hr.vestigo.hp.card
    crdacc:
      name: hr.vestigo.hp.crdacc
      consumerGroup: hr.vestigo.hp.crdacc
    custcrdintacc:
      name: hr.vestigo.hp.custcrdintacc
      consumerGroup: hr.vestigo.hp.custcrdintacc
    customeraccount:
      name: hr.vestigo.hp.customeraccount
      consumerGroup: hr.vestigo.hp.customeraccount
    authptragrmtlimalc:
      name: hr.vestigo.hp.authptragrmtlimalc
      consumerGroup: hr.vestigo.hp.authptragrmtlimalc

javaOpts: "-Xms256M -Xmx256M"

mountKeyStoreFromSecret:
  enabled: false
  secretName: ""
  certPath: ""
  keyPath: ""

mountTrustStoreFromSecret:
  enabled: false
  secretName: ""
  location: ""
  path: ""

customVolumes: []

customMounts: []

customEnv: []
